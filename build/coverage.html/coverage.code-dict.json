{"/home/travis/build/npmtest/node-npmtest-passport-facebook-token/test.js":"/* istanbul instrument in package npmtest_passport_facebook_token */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-passport-facebook-token/lib.npmtest_passport_facebook_token.js":"/* istanbul instrument in package npmtest_passport_facebook_token */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_passport_facebook_token = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_passport_facebook_token = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-passport-facebook-token/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-passport-facebook-token && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_passport_facebook_token */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_passport_facebook_token\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_passport_facebook_token.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_passport_facebook_token.rollup.js'] =\n            local.assetsDict['/assets.npmtest_passport_facebook_token.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_passport_facebook_token.__dirname + '/lib.npmtest_passport_facebook_token.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-passport-facebook-token/node_modules/passport-facebook-token/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _crypto = require('crypto');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _passportOauth = require('passport-oauth');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * `FacebookTokenStrategy` constructor.\n *\n * The Facebook authentication strategy authenticates requests by delegating to\n * Facebook using the OAuth 2.0 protocol.\n *\n * Applications must supply a `verify` callback which accepts an `accessToken`,\n * `refreshToken` and service-specific `profile`, and then calls the `done`\n * callback supplying a `user`, which should be set to `false` if the\n * credentials are not valid.  If an exception occurred, `error` should be set.\n *\n * @param {Object} options\n * @param {Function} verify\n * @example\n * passport.use(new FacebookTokenStrategy({\n *   clientID: '123456789',\n *   clientSecret: 'shhh-its-a-secret'\n * }), (accessToken, refreshToken, profile, done) => {\n *   User.findOrCreate({facebookId: profile.id}, done);\n * });\n */\n\nvar FacebookTokenStrategy = function (_OAuth2Strategy) {\n  _inherits(FacebookTokenStrategy, _OAuth2Strategy);\n\n  function FacebookTokenStrategy(_options, _verify) {\n    _classCallCheck(this, FacebookTokenStrategy);\n\n    var options = _options || {};\n    var verify = _verify;\n    var _fbGraphVersion = options.fbGraphVersion || 'v2.6';\n\n    options.authorizationURL = options.authorizationURL || 'https://www.facebook.com/' + _fbGraphVersion + '/dialog/oauth';\n    options.tokenURL = options.tokenURL || 'https://graph.facebook.com/' + _fbGraphVersion + '/oauth/access_token';\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(FacebookTokenStrategy).call(this, options, verify));\n\n    _this.name = 'facebook-token';\n    _this._accessTokenField = options.accessTokenField || 'access_token';\n    _this._refreshTokenField = options.refreshTokenField || 'refresh_token';\n    _this._profileURL = options.profileURL || 'https://graph.facebook.com/' + _fbGraphVersion + '/me';\n    _this._profileFields = options.profileFields || ['id', 'displayName', 'name', 'emails'];\n    _this._profileImage = options.profileImage || {};\n    _this._clientSecret = options.clientSecret;\n    _this._enableProof = typeof options.enableProof === 'boolean' ? options.enableProof : true;\n    _this._passReqToCallback = options.passReqToCallback;\n    _this._oauth2.useAuthorizationHeaderforGET(false);\n    _this._fbGraphVersion = _fbGraphVersion;\n    return _this;\n  }\n\n  /**\n   * Authenticate request by delegating to a service provider using OAuth 2.0.\n   * @param {Object} req\n   * @param {Object} options\n   */\n\n\n  _createClass(FacebookTokenStrategy, [{\n    key: 'authenticate',\n    value: function authenticate(req, options) {\n      var _this2 = this;\n\n      var accessToken = this.lookup(req, this._accessTokenField);\n      var refreshToken = this.lookup(req, this._refreshTokenField);\n\n      if (!accessToken) return this.fail({ message: 'You should provide ' + this._accessTokenField });\n\n      this._loadUserProfile(accessToken, function (error, profile) {\n        if (error) return _this2.error(error);\n\n        var verified = function verified(error, user, info) {\n          if (error) return _this2.error(error);\n          if (!user) return _this2.fail(info);\n\n          return _this2.success(user, info);\n        };\n\n        if (_this2._passReqToCallback) {\n          _this2._verify(req, accessToken, refreshToken, profile, verified);\n        } else {\n          _this2._verify(accessToken, refreshToken, profile, verified);\n        }\n      });\n    }\n\n    /**\n     * Retrieve user profile from Facebook.\n     *\n     * This function constructs a normalized profile, with the following properties:\n     *\n     *   - `provider`         always set to `facebook`\n     *   - `id`               the user's Facebook ID\n     *   - `username`         the user's Facebook username\n     *   - `displayName`      the user's full name\n     *   - `name.familyName`  the user's last name\n     *   - `name.givenName`   the user's first name\n     *   - `name.middleName`  the user's middle name\n     *   - `gender`           the user's gender: `male` or `female`\n     *   - `profileUrl`       the URL of the profile for the user on Facebook\n     *   - `emails`           the proxied or contact email address granted by the user\n     *\n     * @param {String} accessToken\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'userProfile',\n    value: function userProfile(accessToken, done) {\n      var _this3 = this;\n\n      var profileURL = _url2.default.parse(this._profileURL);\n\n      // For further details, refer to https://developers.facebook.com/docs/reference/api/securing-graph-api/\n      if (this._enableProof) {\n        var proof = _crypto2.default.createHmac('sha256', this._clientSecret).update(accessToken).digest('hex');\n        profileURL.search = (profileURL.search ? profileURL.search + '&' : '') + 'appsecret_proof=' + encodeURIComponent(proof);\n      }\n\n      // Parse profile fields\n      if (this._profileFields) {\n        var fields = FacebookTokenStrategy.convertProfileFields(this._profileFields);\n        profileURL.search = (profileURL.search ? profileURL.search + '&' : '') + 'fields=' + fields;\n      }\n\n      profileURL = _url2.default.format(profileURL);\n\n      this._oauth2.get(profileURL, accessToken, function (error, body, res) {\n        if (error) return done(new _passportOauth.InternalOAuthError('Failed to fetch user profile', error));\n\n        try {\n          var json = JSON.parse(body);\n\n          // Get image URL based on profileImage options\n          var imageUrl = _url2.default.parse('https://graph.facebook.com/' + _this3._fbGraphVersion + '/' + json.id + '/picture');\n          if (_this3._profileImage.width) imageUrl.search = 'width=' + _this3._profileImage.width;\n          if (_this3._profileImage.height) imageUrl.search = (imageUrl.search ? imageUrl.search + '&' : '') + 'height=' + _this3._profileImage.height;\n          imageUrl.search = '' + (imageUrl.search ? imageUrl.search : 'type=large');\n          imageUrl = _url2.default.format(imageUrl);\n\n          var profile = {\n            provider: 'facebook',\n            id: json.id,\n            displayName: json.name || '',\n            name: {\n              familyName: json.last_name || '',\n              givenName: json.first_name || '',\n              middleName: json.middle_name || ''\n            },\n            gender: json.gender || '',\n            emails: [{\n              value: json.email || ''\n            }],\n            photos: [{\n              value: imageUrl\n            }],\n            _raw: body,\n            _json: json\n          };\n\n          done(null, profile);\n        } catch (e) {\n          done(e);\n        }\n      });\n    }\n\n    /**\n     * Parses an OAuth2 RFC6750 bearer authorization token, this method additionally is RFC 2616 compliant and respects\n     * case insensitive headers.\n     *\n     * @param {Object} req http request object\n     * @returns {String} value for field within body, query, or headers\n     */\n\n  }, {\n    key: 'parseOAuth2Token',\n    value: function parseOAuth2Token(req) {\n      var OAuth2AuthorizationField = 'Authorization';\n      var headerValue = req.headers && (req.headers[OAuth2AuthorizationField] || req.headers[OAuth2AuthorizationField.toLowerCase()]);\n\n      return headerValue && function () {\n        var bearerRE = /Bearer\\ (.*)/;\n        var match = bearerRE.exec(headerValue);\n        return match && match[1];\n      }();\n    }\n\n    /**\n     * Performs a lookup of the param field within the request, this method handles searhing the body, query, and header.\n     * Additionally this method is RFC 2616 compliant and allows for case insensitive headers. This method additionally will\n     * delegate outwards to the OAuth2Token parser to validate whether a OAuth2 bearer token has been provided.\n     *\n     * @param {Object} req http request object\n     * @param {String} field\n     * @returns {String} value for field within body, query, or headers\n     */\n\n  }, {\n    key: 'lookup',\n    value: function lookup(req, field) {\n      return req.body && req.body[field] || req.query && req.query[field] || req.headers && (req.headers[field] || req.headers[field.toLowerCase()]) || this.parseOAuth2Token(req);\n    }\n\n    /**\n     * Converts array of profile fields to string\n     * @param {Array} _profileFields Profile fields i.e. ['id', 'email']\n     * @returns {String}\n     */\n\n  }], [{\n    key: 'convertProfileFields',\n    value: function convertProfileFields(_profileFields) {\n      var profileFields = _profileFields || [];\n      var map = {\n        'id': 'id',\n        'displayName': 'name',\n        'name': ['last_name', 'first_name', 'middle_name'],\n        'gender': 'gender',\n        'profileUrl': 'link',\n        'emails': 'email',\n        'photos': 'picture'\n      };\n\n      return profileFields.reduce(function (acc, field) {\n        return acc.concat(map[field] || field);\n      }, []).join(',');\n    }\n  }]);\n\n  return FacebookTokenStrategy;\n}(_passportOauth.OAuth2Strategy);\n\nexports.default = FacebookTokenStrategy;\nmodule.exports = exports['default'];"}